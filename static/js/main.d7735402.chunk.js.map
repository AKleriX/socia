{"version":3,"sources":["assets/images/sociaLogoName.png","assets/images/user.svg","assets/images/search.svg","assets/images/logout.svg","assets/images/login.svg","assets/images/pagesPreloader.svg","assets/images/loginPreloader.svg","assets/images/camera.png","assets/images/aboutMe.svg","assets/images/contact.svg","assets/images/skills.svg","assets/images/edit.svg","assets/images/searchIcon.svg","components/common/FormsControls/FormsControls.module.css","components/Profile/ProfileHeader/ProfileHeader.module.css","components/Profile/ProfileNavbar/ProfileNavbar.module.css","components/Profile/Profile.module.css","components/Header/Navbar/Navbar.module.css","components/Login/Login.module.css","api/api.js","redux/auth-reducer.js","components/Header/Navbar/Navbar.jsx","components/common/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/profile-reducer.js","components/Profile/ProfileHeader/ProfileStatus.jsx","components/Profile/ProfileHeader/ProfileHeader.jsx","components/Profile/ProfileNavbar/ProfileNavbar.jsx","components/Profile/ProfileContent/ProfileAbout/ProfileAbout.jsx","components/Profile/ProfileContent/ProfileContacts/ProfileContacts.jsx","components/Profile/ProfileContent/ProfileJob/ProfileJob.jsx","components/common/FormsControls/FormsControls.jsx","components/Profile/ProfileEditPage/ProfileEditPage.jsx","components/Profile/ProfileContent/ProfileContent.jsx","components/Profile/ProfileContainer.jsx","utils/validators.js","components/Login/Login.jsx","utils/helpers.js","redux/users-reducer.js","components/Users/Paginator/Paginator.jsx","components/Users/User/User.jsx","hoc/withAuthRedurect.jsx","components/Users/Users.jsx","components/NoPageError/NoPageError.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/Users/User/User.module.css","components/Header/Header.module.css","components/Profile/ProfileContent/ProfileJob/ProfileJob.module.css","components/Users/Paginator/Paginator.module.css","components/Users/Users.module.css","assets/images/defaultUser.png","components/Profile/ProfileContent/ProfileAbout/ProfileAbout.module.css","components/Profile/ProfileContent/ProfileContacts/ProfileContacts.module.css","components/Profile/ProfileEditPage/ProfileEditPage.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","authAPI","get","then","response","data","email","password","rememberMe","captcha","post","delete","usersAPI","currentPage","usersCount","term","friend","followAPI","follow","userId","unfollow","profileAPI","getProfileData","getProfileStatus","setProfileData","newProfileData","put","setProfileStatus","newStatus","status","setProfilePhoto","photoFile","formData","FormData","append","SET_AUTH_USER","SET_CAPTCHA_URL","INITIALIZED_SUCCESS","initialState","login","isAuth","captchaURL","initialized","authReducer","produce","draft","action","type","id","setAuthUser","authData","setCaptchaURL","setAuthUserData","dispatch","a","userAuthData","resultCode","getCaptchaURL","url","Navbar","logout","className","style","settingsArea","activeClassName","settingActive","to","settingIcon","src","searchUsersIcon","alt","profileIcon","userLogin","onClick","LogoutIcon","Preloader","preloader","loader","LoginPreloader","loginPreloader","Header","header","logoBox","logo","loginActive","loginIcon","LoginIcon","connect","state","auth","props","SET_PROFILE_DATA","SET_PROFILE_STATUS","SET_PROFILE_EDIT_MODE","SET_PROFILE_PHOTO","profile","editModeProfile","profileReducer","editMode","photos","setProfileEditMode","authUserData","profileData","setNewStatusOrPhotoFlow","apiMethod","actionCreator","forAction","ProfileStatus","setNewProfileStatus","isOwner","useState","statusEditMode","setStatusEditMode","correctStatus","setStatus","textError","hasErrorStyle","error","setError","useEffect","activationEditMode","activateValue","length","cn","errorsStyle","formControl","autoFocus","onBlur","onChange","e","currentTarget","value","formSummaryError","onDoubleClick","ProfileHeader","onMainPhotoSelected","profileSectionCol","profileAuthor","profileAuthorThumb","large","userPhoto","editDP","fileContainer","cameraIcon","isOwnerAuthorContent","authorContent","authorName","fullName","authorStatus","ProfileNavbar","profileNavbarCol","profileNavbar","profileNavbarItem","activeLink","ProfileAbout","aboutMe","tabPanel","centralMeta","pageName","aboutMeIcon","Contact","contactTitle","contactValue","refContactValue","indexOf","href","ProfileContacts","contacts","contactsList","Object","keys","filter","contact","contactsIcon","map","key","ProfileJob","lookingForAJob","lookingForAJobDescription","jobIcon","altPageName","FormControl","input","meta","touched","children","hasError","Textarea","restProps","child","Input","createField","placeholder","name","validators","component","text","Field","validate","ProfileEdit","reduxForm","form","handleSubmit","disabledControl","onSubmit","disabled","formStyle","ProfileEditPage","onEditFormSubmit","editIcon","initialValues","ProfileContent","userIdInURL","authUserId","exact","path","from","render","compose","withRouter","profileStatus","statusText","bind","setNewProfilePhoto","setNewProfileData","getState","messages","forEach","m","startErrorFieldName","endErrorFieldName","errorName","slice","toLowerCase","stopSubmit","match","params","Number","refreshProfile","history","push","profileContainer","container","row","col","colContainer","userProfile","profileSection","profileSectionRow","target","files","profileContent","required","LoginFormContainer","loginInput","loginButton","loginInfo","errorMessage","_error","centralMetaContainer","updateObjectInArray","items","itemId","objPropName","newObjProps","u","SET_USERS","FOLLOW_SUCCESS","UNFOLLOW_SUCCESS","TOGGLE_IS_FETCHING","users","pageSize","totalUsersCount","isFetching","followingIsProgress","usersReducer","followed","setTotalUsersCount","setUsers","followSuccess","unfollowSuccess","toggleIsFetching","toggleIsFetchingProgress","followUnfollowFlow","Paginator","onPageChanged","paginatorContainer","pageCount","Math","ceil","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","initialPage","containerClassName","pagination","subContainerClassName","pages","active","User","user","unfollowUser","followUser","userCol","userBlock","userAvatarBlock","small","followButton","some","nameBlock","mapStateToProps","Users","changeSearchValue","searchValue","checkValue","onChangeCheckValue","onRequestSettingsChange","searchBlock","searchCol","checked","searchIcon","requestUsers","page","totalCount","Component","search","Boolean","checkFriendValue","changeCheckFriendValue","selected","NoPageError","initializeApp","ProfileContainer","window","location","hostname","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d7735402.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sociaLogoName.0dd2b8ba.png\";","module.exports = __webpack_public_path__ + \"static/media/user.807ca40d.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.a99213df.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.50f8d069.svg\";","module.exports = __webpack_public_path__ + \"static/media/login.2febff40.svg\";","module.exports = __webpack_public_path__ + \"static/media/pagesPreloader.27a9f79d.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginPreloader.d1465b42.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.ead9e08b.png\";","module.exports = __webpack_public_path__ + \"static/media/aboutMe.0ab9ee97.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.add3a746.svg\";","module.exports = __webpack_public_path__ + \"static/media/skills.ec2d71a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.f067b70e.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.af2912ac.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__D8VXR\",\"error\":\"FormsControls_error__mOuia\",\"formSummaryError\":\"FormsControls_formSummaryError__3cADA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSectionCol\":\"ProfileHeader_profileSectionCol__399LU\",\"profileAuthor\":\"ProfileHeader_profileAuthor__24tWH\",\"profileAuthorThumb\":\"ProfileHeader_profileAuthorThumb__3B-ao\",\"editDP\":\"ProfileHeader_editDP__1Do3P\",\"fileContainer\":\"ProfileHeader_fileContainer__2wvjS\",\"cameraIcon\":\"ProfileHeader_cameraIcon__1cF7J\",\"authorContent\":\"ProfileHeader_authorContent__2cc_k\",\"isOwnerAuthorContent\":\"ProfileHeader_isOwnerAuthorContent__Q_RT6\",\"authorName\":\"ProfileHeader_authorName__HxGGU\",\"authorStatus\":\"ProfileHeader_authorStatus__31Y_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileNavbarCol\":\"ProfileNavbar_profileNavbarCol__2ehO2\",\"profileNavbar\":\"ProfileNavbar_profileNavbar__1KyCE\",\"profileNavbarItem\":\"ProfileNavbar_profileNavbarItem__3_2JE\",\"activeLink\":\"ProfileNavbar_activeLink__fY6IK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__1nkd0\",\"container\":\"Profile_container__30W2n\",\"row\":\"Profile_row__2iZDl\",\"col\":\"Profile_col__Zwdqd\",\"colContainer\":\"Profile_colContainer__yhWbN\",\"userProfile\":\"Profile_userProfile__1_z-q\",\"profileSection\":\"Profile_profileSection__XQcNZ\",\"profileSectionRow\":\"Profile_profileSectionRow__1DiVF\",\"profileContent\":\"Profile_profileContent__16tfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsArea\":\"Navbar_settingsArea__3f1Lx\",\"settingIcon\":\"Navbar_settingIcon__2cPD1\",\"settingActive\":\"Navbar_settingActive__SmIAr\",\"userLogin\":\"Navbar_userLogin__3Ga6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centralMetaContainer\":\"Login_centralMetaContainer__1CxyI\",\"centralMeta\":\"Login_centralMeta__1TJR5\",\"pageName\":\"Login_pageName__2TkyW\",\"loginInput\":\"Login_loginInput__3-2f1\",\"loginButton\":\"Login_loginButton__3mgwv\"};","import * as axios from \"axios\";\r\n\r\n// Настройка экземпляра axios для работы с API сервера\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '274815a1-0648-4039-8a5e-cbd1e3d20df1'\r\n    }\r\n});\r\n\r\n// Ообъект для работы с API авторизации\r\n\r\nexport const authAPI = {\r\n\r\n    // Авторизация на сервере, получение своего id, login и e-mail\r\n    getAuth() {\r\n        return (instance.get('auth/me')\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Login на сервере, отправка объекта с данными из формы\r\n\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return (instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Logout на сервере, удаление cookie\r\n\r\n    logout() {\r\n        return (instance.delete('auth/login')\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Получение URL-ссылки на картинку-каптчу\r\n\r\n    getCaptchaURL() {\r\n        return (instance.get(`security/get-captcha-url`)\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    }\r\n}\r\n\r\n// Объект для работы с API сервера с данными всех пользователей\r\n\r\nexport const usersAPI = {\r\n\r\n    // Полуение списка пользователей с постранично, задавая номер страницы,\r\n    // число пользователей на ней, поиск по имени и наличие пользователей в друзьях\r\n    getUsers(currentPage = 1, usersCount = 10, term = '', friend = false) {\r\n        return (instance.get(`users?page=${currentPage}&count=${usersCount}&term=${term}&friend=${friend ? friend : ''}`)\r\n            .then(response => {\r\n                return (response.data);\r\n            }));\r\n    }\r\n}\r\n\r\n// Объект для работы с API сервера для осуществления подписки и отписки от пользователя\r\n\r\nexport const followAPI = {\r\n\r\n    // Подпискана пользователя с заданным id\r\n    follow(userId) {\r\n        return (instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return (response.data);\r\n            }));\r\n    },\r\n\r\n    // Отписка от пользователя с заданным id\r\n    unfollow(userId) {\r\n        return (instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    }\r\n}\r\n\r\n// Объект для работы с API сервера по профилям пользователей\r\n\r\nexport const profileAPI = {\r\n\r\n    // Получение данных профиля пользователя с заданным id\r\n    getProfileData(userId) {\r\n        return (instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Получение статуса пользователя с заданным id\r\n    getProfileStatus(userId) {\r\n        return (instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Отвравка новых данных из формы авторизированного пользователя\r\n    setProfileData(newProfileData) {\r\n        return (instance.put(`profile`, newProfileData)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        );\r\n    },\r\n\r\n    // Отправка нового статуса авторизированного пользователя из строки input,\r\n    // путем вормирования своего объекта с данными, ожидаемого сермером\r\n    setProfileStatus(newStatus) {\r\n        return (instance.put(`profile/status/`, {status: newStatus})\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    },\r\n\r\n    // Задание новой фотографии авторизированного пользователя, отпарвкой загруженного файла-картинки\r\n    setProfilePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return (instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n            }));\r\n    }\r\n}","import produce from \"immer\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\n// Объявление констант - типов action\r\nconst SET_AUTH_USER = 'socia/auth-reducer/SET-AUTH-USER'; // тип action - задание данных авторизованного пользователя\r\nconst SET_CAPTCHA_URL = 'socia/auth-reducer/SET-CAPTCHA-URL'; // тип action - запись ссылки на каптчу в state\r\nconst INITIALIZED_SUCCESS = 'socia/auth-reducer/INITIALIZED-SUCCESS'; // тип action - успешное завершение\r\n                                                                      // первичной инициализации приложения\r\n\r\n\r\n// Задаем начальный state данного reducer\r\nlet initialState = {\r\n    userId: null, // id авторизированного пользователя\r\n    login: null, // логин авторизированного пользователя\r\n    email: null, // e-mail авторизированного пользователя\r\n    isAuth: false, // флаг, информирующий о том, выполнена ли (true) авторизация или нет (false)\r\n    captchaURL: null, // ссылка на картинку - каптчу\r\n    initialized: false // флаг, отвечающий за то, была ли произведена первичная инициализация\r\n                       // приложения (true) или нет (false)\r\n};\r\n\r\n\r\n// Сама функция-reducer, обернутая в produce - функцию библиотеки immer, обеспечивающую иммутабельность state.\r\n// Принимает черновую копию state и action\r\nconst authReducer = produce((draft = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER: {\r\n            [draft.email, draft.login, draft.userId, draft.isAuth] =\r\n                [action.email, action.login, action.id, action.isAuth];\r\n            break;\r\n        }\r\n        case SET_CAPTCHA_URL: {\r\n            draft.captchaURL = action.captchaURL;\r\n            break;\r\n        }\r\n        case INITIALIZED_SUCCESS: {\r\n            draft.initialized = true;\r\n            break;\r\n        }\r\n        default:\r\n            return draft;\r\n    }\r\n});\r\n\r\n// Action Creator успешного завершения первичной инициализации приложения\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\n// Action Creator задания авторизированного юзера в state\r\nexport const setAuthUser = (authData, isAuth) => {\r\n    const {id, email, login} = authData;\r\n    return {\r\n        type: SET_AUTH_USER,\r\n        isAuth: isAuth,\r\n        id, email, login\r\n    }\r\n}\r\n\r\n// Action Creator задание в state ссылки на каптчу\r\nexport const setCaptchaURL = (captchaURL) => {\r\n    return {\r\n        type: SET_CAPTCHA_URL,\r\n        captchaURL\r\n    }\r\n}\r\n\r\n// Thunk Creator певичной инициализации приложения\r\nexport const initializeApp = () => {\r\n    return (async (dispatch) => {\r\n        let initApp = await dispatch(setAuthUserData());\r\n        dispatch(initializedSuccess(initApp));\r\n    });\r\n}\r\n\r\n// Thunk Creator получения данных авторизированного пользователя\r\nexport const setAuthUserData = () => {\r\n    return (async (dispatch) => {\r\n            let userAuthData = await authAPI.getAuth();\r\n            if (userAuthData.resultCode === 0)\r\n                dispatch(setAuthUser(userAuthData.data, true));\r\n        }\r\n    );\r\n}\r\n\r\n// Thunk Creator логинизации. Получает данные из формы логина, отправляя их на сервер и,\r\n// в случае корректных данных - выполняет авторизацию, иначе - выводит ошибку\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return (async (dispatch) => {\r\n        let loginInfo = await authAPI.login(email, password, rememberMe, captcha);\r\n        if (loginInfo.resultCode === 0) {\r\n            dispatch(setAuthUserData());\r\n        } else {\r\n            if (loginInfo.resultCode === 10)\r\n                dispatch(getCaptchaURL());\r\n            let errorMessage = loginInfo.messages.length > 0 ? loginInfo.messages[0] : 'Sorry, there was some error';\r\n            dispatch(stopSubmit('login', {_error: errorMessage}));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// Thunk Creator выхода из аккаунта. Отправляет запрос на сервер и задает не авторизированное состояние для state\r\nexport const logout = () => {\r\n    return (async (dispatch) => {\r\n        let logoutInfo = await authAPI.logout();\r\n        if (logoutInfo.resultCode === 0)\r\n            dispatch(setAuthUser({\r\n                    id: null,\r\n                    email: null,\r\n                    login: null\r\n                },\r\n                false));\r\n    });\r\n}\r\n\r\n\r\n// Thunk Creator получения ссылки на каптчу\r\nexport const getCaptchaURL = () => {\r\n    return (async (dispatch) => {\r\n        let captchaURL = await authAPI.getCaptchaURL();\r\n        dispatch(setCaptchaURL(captchaURL.url));\r\n    });\r\n}\r\n\r\nexport default authReducer;\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profileIcon from '../../../assets/images/user.svg';\r\nimport searchUsersIcon from '../../../assets/images/search.svg';\r\nimport LogoutIcon from '../../../assets/images/logout.svg';\r\nimport style from  './Navbar.module.css';\r\n\r\n\r\nconst Navbar = ({login, logout, userId}) => {\r\n    return (\r\n            <ul className={style.settingsArea}>\r\n                <li>\r\n                    <NavLink activeClassName={style.settingActive} to={'/users'}>\r\n                        <img className={style.settingIcon} src={searchUsersIcon} alt={\"Users\"}/>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName={style.settingActive} to={`/profile/${userId}/`}>\r\n                        <img className={style.settingIcon} src={profileIcon} alt={\"Profile\"}/>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink className={style.userLogin} activeClassName={style.settingActive} to={`/profile/${userId}/`}>\r\n                        {login}\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <img onClick={logout} className={style.settingIcon} src={LogoutIcon} alt={\"Logout\"}/>\r\n                </li>\r\n            </ul>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import loader from '../../../assets/images/pagesPreloader.svg';\r\nimport loginPreloader from '../../../assets/images/loginPreloader.svg';\r\nimport React from 'react';\r\nimport style from './Preloader.module.css';\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <img className={style.preloader} src={loader} alt={'Loading...'}/>\r\n    );\r\n}\r\n\r\nexport const LoginPreloader = () => {\r\n    return (\r\n        <img className={style.loginPreloader} src={loginPreloader} alt={'Authorization...'}/>\r\n    );\r\n}","import React from \"react\";\r\nimport logo from '../../assets/images/sociaLogoName.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Navbar from \"./Navbar/Navbar\";\r\nimport LoginIcon from '../../assets/images/login.svg';\r\nimport style from './Header.module.css';\r\nimport {LoginPreloader} from \"../common/Preloader/Preloader\";\r\n\r\nconst Header = ({isAuth, login, logout,  initialized, userId}) => {\r\n    return (\r\n        <div className={style.header}>\r\n            <div className={style.logoBox}>\r\n                <NavLink to={'/'}>\r\n                    <img className={style.logo} src={logo} alt={'Logo'}/>\r\n                </NavLink>\r\n            </div>\r\n            {\r\n                initialized ?\r\n                    (isAuth ? <Navbar login={login} logout={logout} userId={userId}/> :\r\n                    <NavLink activeClassName={style.loginActive} to={'/login'}>\r\n                        <img className={style.loginIcon} src={LoginIcon} alt={'Login'}/>\r\n                    </NavLink>) :\r\n                    <LoginPreloader />\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = (props) => {\r\n    return(\r\n        <Header {...props} />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return(\r\n        {\r\n            login: state.auth.login,\r\n            isAuth: state.auth.isAuth,\r\n            userId: state.auth.userId,\r\n            initialized: state.auth.initialized\r\n        }\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import produce from \"immer\";\r\nimport {authAPI, profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\n// Объявление констант - типов action\r\nconst SET_PROFILE_DATA = 'socia/profile-reducer/SET-PROFILE-DATA'; // тип action - задание в state данных данных текущего профиля\r\nconst SET_PROFILE_STATUS = 'socia/profile-reducer/SET-PROFILE-STATUS'; // тип action - задание в state статуса текущего профиля\r\nconst SET_PROFILE_EDIT_MODE = 'socia/profile-reducer/SET-PROFILE-EDIT-MODE'; // тип action - изменение (включение/выключение) режима редактирования Data профиля\r\nconst SET_PROFILE_PHOTO = 'socia/profile-reducer/SET-PROFILE-PHOTO'; // тип action - задание новой фотографии профиля\r\n\r\n// Задаем начальный state данного reducer\r\nlet initialState = {\r\n    profile: null, // объект с данными и фото профиля\r\n    status: null, // status текущего профиля\r\n    editModeProfile: false // флаг, информирующий о включении (true) и выключении (false) режима редактирования профиля\r\n};\r\n\r\n// Сама функция-reducer, обернутая в produce - функцию библиотеки immer, обеспечивающую иммутабельность state.\r\n// Принимает черновую копию state и action\r\nconst profileReducer = produce((draft = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PROFILE_DATA: {\r\n            draft.profile = action.profile;\r\n            break;\r\n        }\r\n        case SET_PROFILE_STATUS: {\r\n            draft.status = action.status;\r\n            break;\r\n        }\r\n        case SET_PROFILE_EDIT_MODE: {\r\n            draft.editModeProfile = action.editMode;\r\n            break;\r\n        }\r\n        case SET_PROFILE_PHOTO: {\r\n            draft.profile.photos = action.photos;\r\n            break;\r\n        }\r\n        default:\r\n            return draft;\r\n    }\r\n});\r\n\r\n// Action Creator задания данных текущего профиля\r\nexport const setProfileData = (profile) => {\r\n    return (\r\n        {\r\n            type: SET_PROFILE_DATA,\r\n            profile\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator задание статуса текущего профиля\r\nexport const setProfileStatus = (status) => {\r\n    return (\r\n        {\r\n            type: SET_PROFILE_STATUS,\r\n            status\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator переключение режима редактирования профиля\r\nexport const setProfileEditMode = (editMode) => {\r\n    return (\r\n        {\r\n            type: SET_PROFILE_EDIT_MODE,\r\n            editMode\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator задание фотографии профиля\r\nexport const setProfilePhoto = (photos) => {\r\n    return (\r\n        {\r\n            type: SET_PROFILE_PHOTO,\r\n            photos\r\n        }\r\n    );\r\n}\r\n\r\n// Thunk Creator получения данный профиля с заданным userId\r\nexport const getProfileData = (userId) => {\r\n    return (async (dispatch) => {\r\n        if (!userId) {\r\n            let authUserData = await authAPI.getAuth();\r\n            if (authUserData.resultCode === 0)\r\n                userId = authUserData.data.id;\r\n        }\r\n        let profileData = await profileAPI.getProfileData(userId);\r\n        dispatch(setProfileData(profileData));\r\n    });\r\n}\r\n\r\n// Thunk Creator получение status профиля с заданным userId\r\nexport const getProfileStatus = (userId) => {\r\n    return (async (dispatch) => {\r\n        if (!userId) {\r\n            let authUserData = await authAPI.getAuth();\r\n            if (authUserData.resultCode === 0)\r\n                userId = authUserData.data.id;\r\n        }\r\n        let profileStatus = await profileAPI.getProfileStatus(userId);\r\n        dispatch(setProfileStatus(profileStatus));\r\n    });\r\n}\r\n\r\n// Thunk Creator задание нового status профиля с statusText\r\nexport const setNewProfileStatus = (statusText) => {\r\n    return (async (dispatch) => {\r\n        await setNewStatusOrPhotoFlow(dispatch, statusText, profileAPI.setProfileStatus.bind(profileAPI),\r\n            setProfileStatus, statusText);\r\n    });\r\n}\r\n\r\n// Thunk Creator задания новой фотографии профиля, пришедшей в виде файла photoFile\r\nexport const setNewProfilePhoto = (photoFile) => {\r\n    return (async (dispatch) => {\r\n        await setNewStatusOrPhotoFlow(dispatch, photoFile, profileAPI.setProfilePhoto.bind(profileAPI),\r\n            setProfilePhoto);\r\n    });\r\n}\r\n\r\n// Вспомогательная функция для задания нового статуса или новой фотографии профиля, принимающей метод store dispatch,\r\n// необходимую для отправки на сервер data, функцию apiMethod, осуществляющую отправку данных серверу, функцию actionCreator, возвращающую необходимый action,\r\n// и объект forAction, в котором могут содержаться данные, необходимые для actionCreator (если null - задаем фото в качестве аргумента actionCreator)\r\nconst setNewStatusOrPhotoFlow = async (dispatch, data, apiMethod, actionCreator, forAction = null) => {\r\n    let response = await apiMethod(data);\r\n    if (response.resultCode === 0) {\r\n        if (forAction === null)\r\n            forAction = response.data.photos;\r\n        dispatch(actionCreator(forAction));\r\n    }\r\n}\r\n\r\n// Thunk Creator задания новых данных для профиля с проверкой серверной валидации и\r\n// отлавливания ошибок в полях формы редактирования,\r\n// данные которой приходят в объекте profileData, сформированного redux-form\r\nexport const setNewProfileData = (profileData) => {\r\n    return (async (dispatch, getState) => {\r\n        const userId = getState().auth.userId;\r\n        let response = await profileAPI.setProfileData(profileData);\r\n        if (response.resultCode === 0){\r\n            dispatch(getProfileData(userId));\r\n            dispatch(setProfileEditMode(false));\r\n        } else {\r\n            let messages = {};\r\n            response.messages.forEach(m => {\r\n               let startErrorFieldName = m.indexOf('>') + 1;\r\n               let endErrorFieldName = m.indexOf(')');\r\n               let errorName = m.slice(startErrorFieldName, endErrorFieldName);\r\n               messages[errorName.toLowerCase()] = m;\r\n            });\r\n            dispatch(stopSubmit('edit-profile', {'contacts': {...messages}}));\r\n            dispatch(setProfileEditMode(true));\r\n        }\r\n    });\r\n}\r\n\r\nexport default profileReducer;","import React, {useEffect, useState} from \"react\";\r\nimport errorsStyle from '../../common/FormsControls/FormsControls.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileStatus = ({status, setNewProfileStatus, isOwner}) => {\r\n    let [statusEditMode, setStatusEditMode] = useState(false);\r\n    let [correctStatus, setStatus] = useState(status);\r\n    let [error, setError] = useState(\r\n        {\r\n            textError: null,\r\n            hasErrorStyle: null\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        setStatus(status);\r\n    }, [status]);\r\n\r\n    const activationEditMode = (activateValue) => {\r\n        if (isOwner) {\r\n            if (activateValue) {\r\n                setError({\r\n                    textError: null,\r\n                    hasErrorStyle: null\r\n                });\r\n                setStatusEditMode(activateValue);\r\n            }\r\n            else {\r\n                if (correctStatus.length >= 300) {\r\n                    setError({\r\n                        textError: 'Max length: 300 symbols',\r\n                        hasErrorStyle: cn(errorsStyle.formControl, errorsStyle.error)\r\n                    });\r\n                    return ;\r\n                }\r\n                setStatusEditMode(activateValue);\r\n                setNewProfileStatus(correctStatus);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                {!statusEditMode ?\r\n                    <div>\r\n                        <span onDoubleClick={() => {activationEditMode(true)}}>{status || ''}</span>\r\n                    </div> :\r\n                    <div className={error.hasErrorStyle}>\r\n                        <input autoFocus={true} onBlur={() => activationEditMode(false)}\r\n                               onChange={onStatusChange} value={correctStatus}/>\r\n                        {error.textError && <p className={errorsStyle.formSummaryError}>{error.textError}</p>}\r\n                    </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport userPhoto from \"../../../assets/images/defaultUser.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport style from './ProfileHeader.module.css';\r\nimport cameraIcon from '../../../assets/images/camera.png';\r\n\r\nconst ProfileHeader = ({profile, isOwner, onMainPhotoSelected, status, setNewProfileStatus}) => {\r\n    return (\r\n        <div className={style.profileSectionCol}>\r\n            <div className={style.profileAuthor}>\r\n                <div className={style.profileAuthorThumb}>\r\n                    <img alt={'author'} src={profile.photos.large || userPhoto}/>\r\n                    {isOwner && <div className={style.editDP}>\r\n                        <label className={style.fileContainer}>\r\n                            <img alt={'camera'} src={cameraIcon} className={style.cameraIcon}/>\r\n                            <input type={'file'} onChange={onMainPhotoSelected}/>\r\n                        </label>\r\n                    </div>}\r\n                    <div className={isOwner ? style.isOwnerAuthorContent : style.authorContent}>\r\n                        <div className={style.authorName}>\r\n                            <NavLink to={`/profile/${profile.userId}/`}>\r\n                                {profile.fullName}\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={style.authorStatus}>\r\n                            <ProfileStatus status={status} setNewProfileStatus={setNewProfileStatus} isOwner={isOwner}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileHeader;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './ProfileNavbar.module.css';\r\n\r\nconst ProfileNavbar = ({profile, isOwner}) => {\r\n    return (\r\n        <div className={style.profileNavbarCol}>\r\n            <ul className={style.profileNavbar}>\r\n                <li className={style.profileNavbarItem}>\r\n                    <NavLink activeClassName={style.activeLink} to={`/profile/${profile.userId}/about`}>\r\n                        About\r\n                    </NavLink>\r\n                </li>\r\n                <li className={style.profileNavbarItem}>\r\n                    <NavLink activeClassName={style.activeLink} to={`/profile/${profile.userId}/contacts`}>\r\n                        Contacts\r\n                    </NavLink>\r\n                </li>\r\n                <li className={style.profileNavbarItem}>\r\n                    <NavLink activeClassName={style.activeLink} to={`/profile/${profile.userId}/job`}>\r\n                        Job\r\n                    </NavLink>\r\n                </li>\r\n                {isOwner && <li className={style.profileNavbarItem}>\r\n                    <NavLink activeClassName={style.activeLink} to={`/profile/${profile.userId}/edit`}>\r\n                        Edit\r\n                    </NavLink>\r\n                </li>}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileNavbar;","import React from \"react\";\r\nimport style from './ProfileAbout.module.css';\r\nimport aboutMeIcon from '../../../../assets/images/aboutMe.svg';\r\n\r\nconst ProfileAbout = ({aboutMe}) => {\r\n    return (\r\n        <div className={style.tabPanel}>\r\n            <div className={style.centralMeta}>\r\n                <div className={style.pageName}>\r\n                    <img alt={'about me'} src={aboutMeIcon} />\r\n                    &nbsp;About me:\r\n                </div>\r\n            <p>\r\n                {aboutMe}\r\n            </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileAbout;","import React from \"react\";\r\nimport style from './ProfileContacts.module.css';\r\nimport contactsIcon from '../../../../assets/images/contact.svg';\r\n\r\n\r\nconst ProfileContacts = ({contacts}) => {\r\n    const contactsList = Object.keys(contacts).filter(contact => {\r\n        return !!contacts[contact];\r\n    });\r\n\r\n    return (\r\n        <div className={style.tabPanel}>\r\n            <div className={style.centralMeta}>\r\n                <div className={style.pageName}>\r\n                    <img src={contactsIcon} alt={'Contacts'}/>\r\n                    &nbsp;Contacts:\r\n                </div>\r\n                {contactsList.length === 0 ? <p>No contacts</p> :\r\n                contactsList.map(contact => <Contact key={contact} contactTitle={contact}\r\n                                                      contactValue={contacts[contact]}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    let refContactValue = contactValue;\r\n    if (refContactValue.indexOf('http') === -1)\r\n        refContactValue = `https://${contactValue}`;\r\n    return (\r\n        <p><b>{contactTitle}</b>: <a href={refContactValue}>{contactValue}</a></p>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileContacts;","import React from \"react\";\r\nimport style from './ProfileJob.module.css';\r\nimport jobIcon from '../../../../assets/images/skills.svg';\r\nimport cn from 'classnames';\r\n\r\nconst ProfileJob = ({lookingForAJob, lookingForAJobDescription}) => {\r\n    return (\r\n        <div className={style.tabPanel}>\r\n            <div className={style.centralMeta}>\r\n                <div className={style.pageName}>\r\n                    <img src={jobIcon} alt={'Job'}/>\r\n                    &nbsp;Job:\r\n                </div>\r\n                {lookingForAJob ?\r\n                    <div>\r\n                        <p>\r\n                            I am looking for a yob!\r\n                        </p>\r\n                        <div className={cn(style.pageName, style.altPageName)}>\r\n                            &nbsp;My skills:\r\n                        </div>\r\n                        <p>\r\n                            {lookingForAJobDescription}\r\n                        </p>\r\n                    </div> :\r\n                    <div>\r\n                        <p>\r\n                            I am <b>NOT</b> looking for a job!\r\n                        </p>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileJob;","import style from './FormsControls.module.css';\r\nimport cn from 'classnames';\r\nimport React from \"react\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = (touched && error) ? style.error : '';\r\n    return (\r\n        <div className={cn(style.formControl, hasError)}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {(touched && error)&& <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n      <FormControl {...props}>\r\n          <textarea {...input} {...restProps}/>\r\n      </FormControl>\r\n    );\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n      <FormControl {...props}>\r\n          <input {...input} {...restProps}/>\r\n      </FormControl>\r\n    );\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>\r\n            {text !== '' ? <span>{text}</span> : ''}\r\n        </div>\r\n    );\r\n}","import formStyle from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport style from './ProfileEditPage.module.css';\r\nimport editIcon from \"../../../assets/images/edit.svg\";\r\n\r\nconst ProfileEditForm = ({handleSubmit, profile, error, editModeProfile}) => {\r\n    const disabledControl = !editModeProfile ? 'disabled' : '';\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {editModeProfile &&\r\n            <button disabled={disabledControl}>Save</button>\r\n            }\r\n            {\r\n                error && <div className={formStyle.formSummaryError}>{error}</div>\r\n            }\r\n            <div>\r\n                <b>Full Name</b>: {createField('Full name', 'fullName', [], Input, {disabled: disabledControl})}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>: {createField('About me', 'aboutMe', [], Textarea, {disabled: disabledControl})}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: <ul>\r\n                {Object.keys(profile.contacts).map(contact => {\r\n                    return <li key={contact}>\r\n                        <b>{contact}</b>: {createField(contact, 'contacts.' + contact, [], Input, {disabled: disabledControl})}\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField('', 'lookingForAJob', [], Input, {\r\n                type: 'checkbox',\r\n                disabled: disabledControl\r\n            })}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: {createField('My professional skills', 'lookingForAJobDescription',\r\n                [], Textarea, {disabled: disabledControl})}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileEditPage = ({profile, onEditFormSubmit, editModeProfile, setProfileEditMode}) => {\r\n\r\n    return (\r\n        <div className={style.tabPanel}>\r\n            <div className={style.centralMeta}>\r\n                <div className={style.pageName}>\r\n                    <img alt={'edit'} src={editIcon}/>\r\n                    &nbsp;Edit profile:\r\n                </div>\r\n                {!editModeProfile &&\r\n                <button onClick={() => setProfileEditMode(true)}>Edit</button>\r\n                }\r\n                <ProfileEdit profile={profile} initialValues={profile}\r\n                             onSubmit={onEditFormSubmit} editModeProfile={editModeProfile}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileEdit = reduxForm({form: 'edit-profile'})(ProfileEditForm);\r\n\r\nexport default ProfileEditPage;","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport ProfileAbout from \"./ProfileAbout/ProfileAbout\";\r\nimport ProfileContacts from \"./ProfileContacts/ProfileContacts\";\r\nimport ProfileJob from \"./ProfileJob/ProfileJob\";\r\nimport ProfileEditPage from \"../ProfileEditPage/ProfileEditPage\";\r\n\r\nconst ProfileContent = ({profile, setProfileEditMode, editModeProfile, onEditFormSubmit, userIdInURL, authUserId}) => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={`/profile/:userId?`}>\r\n                <Redirect from={'/profile'} to={`/profile/${userIdInURL ? userIdInURL : authUserId}/about`}/>\r\n            </Route>\r\n            <Route path={`/profile/:userId/about`}\r\n                   render={() => <ProfileAbout aboutMe={profile.aboutMe}/>}/>\r\n            <Route path={`/profile/:userId/contacts`}\r\n                   render={() => <ProfileContacts contacts={profile.contacts}/>}/>\r\n            <Route path={`/profile/:userId/job`}\r\n                   render={() => <ProfileJob lookingForAJob={profile.lookingForAJob}\r\n                                             lookingForAJobDescription={profile.lookingForAJobDescription}/>}/>\r\n            <Route path={`/profile/:userId/edit`}\r\n                   render={() => <ProfileEditPage profile={profile} onEditFormSubmit={onEditFormSubmit}\r\n                                                  editModeProfile={editModeProfile} setProfileEditMode={setProfileEditMode}/>}/>\r\n\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default ProfileContent;","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfileData,\r\n    getProfileStatus,\r\n    setNewProfileData,\r\n    setNewProfilePhoto,\r\n    setNewProfileStatus, setProfileData, setProfileEditMode, setProfileStatus\r\n} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport ProfileHeader from \"./ProfileHeader/ProfileHeader\";\r\nimport ProfileNavbar from \"./ProfileNavbar/ProfileNavbar\";\r\nimport ProfileContent from \"./ProfileContent/ProfileContent\";\r\nimport style from './Profile.module.css';\r\n\r\nconst Profile = ({\r\n                     profile, authUserId, status, editModeProfile,\r\n                     getProfileData, getProfileStatus, setNewProfileStatus,\r\n                     setNewProfilePhoto, setNewProfileData, setProfileData,\r\n                     setProfileStatus, setProfileEditMode, ...props\r\n                 }) => {\r\n\r\n\r\n    const isOwner = (!props.match.params.userId || (Number(props.match.params.userId) === authUserId));\r\n\r\n    const refreshProfile = () => {\r\n        let userId = props.match.params.userId;\r\n        if (!userId) {\r\n            userId = authUserId;\r\n            if (!userId) {\r\n                props.history.push('/login');\r\n                return;\r\n            }\r\n        }\r\n        setProfileData(null);\r\n        setProfileStatus(null);\r\n        getProfileData(userId);\r\n        getProfileStatus(userId);\r\n    }\r\n\r\n    useEffect(refreshProfile, []);\r\n    useEffect(refreshProfile, [props.match.params.userId]);\r\n\r\n    if (!profile)\r\n        return <Preloader/>\r\n\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length)\r\n            setNewProfilePhoto(e.target.files[0]);\r\n    }\r\n\r\n    const onEditFormSubmit = (formData) => {\r\n        setNewProfileData(formData);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className={style.profileContainer}>\r\n                <div className={style.container}>\r\n                    <div className={style.row}>\r\n                        <div className={style.col}>\r\n                            <div className={style.colContainer}>\r\n                                <div className={style.userProfile}>\r\n                                    <div className={style.profileSection}>\r\n                                        <div className={style.profileSectionRow}>\r\n                                            <ProfileHeader profile={profile} isOwner={isOwner}\r\n                                                           onMainPhotoSelected={onMainPhotoSelected} status={status}\r\n                                                           setNewProfileStatus={setNewProfileStatus}/>\r\n                                            <div>\r\n                                                <ProfileNavbar profile={profile} isOwner={isOwner}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={style.profileContent}>\r\n                                    <div>\r\n                                        <ProfileContent profile={profile} setProfileEditMode={setProfileEditMode}\r\n                                                        editModeProfile={editModeProfile}\r\n                                                        onEditFormSubmit={onEditFormSubmit}\r\n                                                        userIdInURL={props.match.params.userId}\r\n                                                        authUserId={authUserId}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authUserId: state.auth.userId,\r\n        profile: state.profile.profile,\r\n        status: state.profile.status,\r\n        editModeProfile: state.profile.editModeProfile\r\n    };\r\n}\r\n\r\nexport default compose(withRouter,\r\n    connect(mapStateToProps, {\r\n        getProfileData, getProfileStatus, setNewProfileStatus,\r\n        setNewProfilePhoto, setNewProfileData,\r\n        setProfileData, setProfileStatus, setProfileEditMode\r\n    })\r\n)(Profile);","\r\n\r\nexport const required = (value) => {\r\n    if (value)\r\n        return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && (value.length > maxLength))\r\n        return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport errorsStyle from '../common/FormsControls/FormsControls.module.css';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport style from './Login.module.css';\r\nimport cn from 'classnames';\r\n\r\n\r\nconst Login = ({login, isAuth, captchaURL}) => {\r\n    const onSubmitLoginForm = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <Redirect to={'/profile'}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={style.centralMetaContainer}>\r\n            <div className={style.centralMeta}>\r\n            <h1 className={style.pageName}>Login</h1>\r\n            <LoginFormContainer onSubmit={onSubmitLoginForm} captchaURL={captchaURL}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={style.loginInput}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            </div>\r\n            <div className={style.loginInput}>\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            </div>\r\n            <div className={style.loginInput}>\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n            </div>\r\n            {captchaURL && <img src={captchaURL} alt={'captcha'}/>}\r\n            {captchaURL &&\r\n            <div className={style.loginInput}>\r\n                {createField('Symbols from image', 'captcha', [required], Input)}\r\n            </div>}\r\n            {error && <div className={cn(errorsStyle.formSummaryError)}>\r\n                {error}\r\n            </div>}\r\n            <div className={style.loginButton}>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginFormContainer = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            captchaURL: state.auth.captchaURL,\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    );\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId)\r\n            return {...u, ...newObjProps};\r\n        return u;\r\n    });\r\n}","import produce from \"immer\";\r\nimport {updateObjectInArray} from \"../utils/helpers\";\r\nimport {followAPI, usersAPI} from \"../api/api\";\r\n\r\n// Объявление констант - типов action\r\nconst SET_TOTAL_USERS_COUNT = 'socia/users-reducer/SET-TOTAL-USERS-COUNT'; // тип action - задание в state общего числа пользователей\r\nconst SET_USERS = 'socia/users-reducer/SET-USERS';// тип action - задание массива пользователей на странице\r\nconst FOLLOW_SUCCESS = 'socia/users-reducer/FOLLOW-SUCCESS';// тип action - успешного завершения подписки на пользователя\r\nconst UNFOLLOW_SUCCESS = 'socia/users-reducer/UNFOLLOW-SUCCESS';// тип action - успешного завершения отвиски от пользователя\r\nconst TOGGLE_IS_FETCHING = 'socia/users-reducer/TOGGLE-IS-FETCHING'; // тип action - установа флага ожидания ответа от сервера по получению списка пользователей\r\nconst TOGGLE_IS_FETCHING_PROGRESS = 'socia/users-reducer/TOGGLE-IS-FETCHING-PROGRESS'; // тип action - внесение id пользователя в список ожидающих ответа от сервера\r\n\r\n// Задаем начальный state данного reducer\r\nlet initialState = {\r\n    users: [], // массив всех пользователей на странице\r\n    pageSize: 10, // количество пользователей на странице\r\n    totalUsersCount: 0, // общее число пользователей\r\n    isFetching: false, // флаг, характеризующий ожидание (true) ответа от сервера или его отсутствие (false)\r\n    followingIsProgress: [] //список ud плользователей, для которых происходит ожидание подписки/отписки\r\n};\r\n\r\n// Сама функция-reducer, обернутая в produce - функцию библиотеки immer, обеспечивающую иммутабельность state.\r\n// Принимает черновую копию state и action\r\nconst usersReducer = produce((draft = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            draft.totalUsersCount = action.totalUsersCount;\r\n            break;\r\n        }\r\n        case SET_USERS: {\r\n            draft.users = action.users;\r\n            break;\r\n        }\r\n        case FOLLOW_SUCCESS: {\r\n            draft.users =\r\n                updateObjectInArray(draft.users, action.userId, 'id', {followed: true});\r\n            break;\r\n        }\r\n        case UNFOLLOW_SUCCESS: {\r\n            draft.users =\r\n                updateObjectInArray(draft.users, action.userId, 'id', {followed: false});\r\n            break;\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            draft.isFetching = action.isFetching;\r\n            break;\r\n        }\r\n        case TOGGLE_IS_FETCHING_PROGRESS: {\r\n            draft.followingIsProgress = action.isFetching ? [...draft.followingIsProgress, action.userId]\r\n                : draft.followingIsProgress.filter(id => id !== action.userId);\r\n            break;\r\n        }\r\n        default:\r\n            return draft;\r\n    }\r\n});\r\n\r\n// Action Creator задания в state общего числа пользователей totalUsersCount\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return (\r\n        {\r\n            type: SET_TOTAL_USERS_COUNT,\r\n            totalUsersCount\r\n        }\r\n    );\r\n}\r\n\r\n\r\n// Action Creator задания в state списка пользователей на выбранной странице, где users - массив пользователей\r\nexport const setUsers = (users) => {\r\n    return (\r\n        {\r\n            type: SET_USERS,\r\n            users\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator задания успешной подписки на пользователя с заданным id userId\r\nexport const followSuccess = (userId) => {\r\n    return (\r\n        {\r\n            type: FOLLOW_SUCCESS,\r\n            userId\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator задания успешной отписки от пользователя с заданным id userId\r\nexport const unfollowSuccess = (userId) => {\r\n    return (\r\n        {\r\n            type: UNFOLLOW_SUCCESS,\r\n            userId\r\n        }\r\n    );\r\n}\r\n\r\n// Action Creator задания флага ожидания получения списка пользователей, где isFetching - значение флага\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return ({\r\n        type:TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    });\r\n}\r\n\r\n// Action Creator изменяющий состояние пользователя с заданным id userID\r\n// по осуществлению на него подписки/отписки в зависимости от ожидания (true) или нет (false) ответа от сервера\r\n// в соответствии с переданным значением isFetching\r\nexport const toggleIsFetchingProgress = (isFetching, userId) => {\r\n    return ({\r\n        type: TOGGLE_IS_FETCHING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    });\r\n}\r\n\r\n// Thunk Creator осуществления подписки на пользователя с заданным id userId\r\nexport const followUser = (userId) => {\r\n    return (\r\n        async (dispatch) => {\r\n            await followUnfollowFlow(dispatch, userId, followAPI.follow.bind(followAPI), followSuccess);\r\n        }\r\n    );\r\n}\r\n\r\n// Thunk Creator осуществления отписки от пользователя с заданным id userId\r\nexport const unfollowUser = (userId) => {\r\n    return (\r\n        async (dispatch) => {\r\n            await followUnfollowFlow(dispatch, userId, followAPI.unfollow.bind(followAPI), unfollowSuccess);\r\n        }\r\n    );\r\n}\r\n\r\n// Вспомогательная функция осуществляющая подписку или отписку от пользователя с заданным id userId,\r\n// получая метод store dispatch, функцию apiMethod, осуществляющую отправку запроса на сервер и функцию actionCreator,\r\n// возвращающую соответствующий action\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFetchingProgress(true, userId));\r\n    let followUnfollowInfo = await apiMethod(userId);\r\n    if (followUnfollowInfo.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleIsFetchingProgress(false, userId));\r\n}\r\n\r\n\r\n// Thunk Creator осуществления запрос и задание нового списка пользователей в зависимости от страницы\r\n// и необходимого количества пользователей на ней\r\nexport const requestUsers = (page, pageSize,searchValue = '', friend = false) => {\r\n    return(\r\n        async (dispatch) => {\r\n            dispatch(toggleIsFetching(true));\r\n            dispatch(setUsers([]));\r\n\r\n            let data = await usersAPI.getUsers(page, pageSize,searchValue, friend);\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        }\r\n    );\r\n}\r\n\r\nexport default usersReducer;\r\n","import React from \"react\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport style from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\nconst Paginator = ({currentPage, onPageChanged, totalUsersCount, pageSize}) => {\r\n\r\n    return (\r\n        <div className={style.paginatorContainer}>\r\n            <ReactPaginate pageCount={Math.ceil(totalUsersCount / pageSize)}\r\n                           previousLabel={'<-'}\r\n                           nextLabel={'->'}\r\n                           breakLabel={'...'}\r\n                           marginPagesDisplayed={2}\r\n                           pageRangeDisplayed={5}\r\n                           onPageChange={onPageChanged}\r\n                           initialPage={currentPage - 1}\r\n                           containerClassName={style.pagination}\r\n                           subContainerClassName={cn(style.pagination, style.pages)}\r\n                           activeClassName={cn(style.active)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/defaultUser.png\";\r\nimport style from './User.module.css';\r\n\r\nconst User = ({user, followingIsProgress, unfollowUser, followUser}) => {\r\n    return (\r\n        <div className={style.userCol}>\r\n            <div className={style.userBlock}>\r\n                <div className={style.userAvatarBlock}>\r\n                    <div>\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                            <img className={style.userPhoto}\r\n                                 src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                 alt={'Profile'}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={style.followButton}>\r\n                        {user.followed ?\r\n                            <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollowUser(user.id);\r\n                            }}>Unfollow</button> :\r\n                            <button disabled={followingIsProgress.some(id => id === user.id)} onClick={() => {\r\n                                followUser(user.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </div>\r\n                <div className={style.nameBlock}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={`/profile/${user.id}`}>\r\n                            <h4>{user.name}</h4>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            isAuth: state.auth.isAuth\r\n        }\r\n    );\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth)\r\n            return (\r\n                <Redirect to={'/login'} />\r\n            );\r\n        return (\r\n            <Component {...props} />\r\n        );\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {followUser, requestUsers, unfollowUser} from \"../../redux/users-reducer\";\r\nimport Paginator from \"./Paginator/Paginator\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport User from \"./User/User\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedurect\";\r\nimport style from './Users.module.css';\r\nimport searchIcon from '../../assets/images/searchIcon.svg';\r\n\r\nconst Users = ({\r\n                   users, pageSize, totalUsersCount, currentPage, isFetching,\r\n                   followingIsProgress, followUser, unfollowUser, onPageChanged,\r\n                   changeSearchValue, searchValue, checkValue, onChangeCheckValue,\r\n                   onRequestSettingsChange\r\n               }) => {\r\n    return (\r\n        <div>\r\n            <div className={style.centralMetaContainer}>\r\n                <div className={style.centralMeta}>\r\n                    <div className={style.searchBlock}>\r\n                        <div className={style.searchCol}>\r\n                            <input value={searchValue}\r\n                                   onChange={(e) => changeSearchValue(e.currentTarget.value)}\r\n                                   placeholder={'Search user name'}/>\r\n                            <label>\r\n                                <input type={'checkbox'} checked={checkValue}\r\n                                       onChange={onChangeCheckValue}/>&nbsp;Friend&nbsp;</label>\r\n                            <button onClick={onRequestSettingsChange}>\r\n                                <img src={searchIcon} alt={'search'}/>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                               totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n                </div>\r\n            </div>\r\n            {\r\n                isFetching ? <Preloader/> : users.map(user => <User key={user.id}\r\n                                                                    user={user}\r\n                                                                    followingIsProgress={followingIsProgress}\r\n                                                                    unfollowUser={unfollowUser}\r\n                                                                    followUser={followUser}/>)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst UsersContainer = ({\r\n                            users, pageSize, totalUsersCount, isFetching, followingIsProgress,\r\n                            requestUsers, followUser, unfollowUser, ...props\r\n                        }) => {\r\n\r\n    let currentPage = (props.match.params.page) || 1;\r\n\r\n    let [searchValue, changeSearchValue] = useState(props.match.params.search || '');\r\n    let [checkFriendValue, changeCheckFriendValue] = useState(Boolean(Number(props.match.params.friend)));\r\n\r\n    useEffect(() => {\r\n        requestUsers(currentPage, pageSize)\r\n    }, [currentPage, pageSize, requestUsers]);\r\n\r\n    const onChangeCheckValue = (e) => {\r\n        changeCheckFriendValue(!checkFriendValue);\r\n    }\r\n\r\n    const onRequestSettingsChange = () => {\r\n        requestUsers(1, pageSize, searchValue, checkFriendValue);\r\n        props.history.push(`/users/page=${1}search=${searchValue}friend=${checkFriendValue ? 1 : 0}`);\r\n    }\r\n\r\n    const onPageChanged = (e) => {\r\n        requestUsers(e.selected + 1, pageSize,\r\n            (props.match.params.search || ''), Boolean(Number(props.match.params.friend)));\r\n        changeCheckFriendValue(Boolean(Number(props.match.params.friend)));\r\n        changeSearchValue(props.match.params.search || '');\r\n        props.history.push(`/users/page=${e.selected + 1}search=${props.match.params.search || ''}friend=${props.match.params.friend || 0}`);\r\n    }\r\n\r\n    return (\r\n        <Users users={users} pageSize={pageSize} totalUsersCount={totalUsersCount} currentPage={currentPage}\r\n               isFetching={isFetching} followingIsProgress={followingIsProgress} requestUsers={requestUsers}\r\n               followUser={followUser} unfollowUser={unfollowUser} onPageChanged={onPageChanged}\r\n               searchValue={searchValue} changeSearchValue={changeSearchValue}\r\n               checkValue={checkFriendValue} onChangeCheckValue={onChangeCheckValue}\r\n               onRequestSettingsChange={onRequestSettingsChange}/>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            users: state.users.users,\r\n            pageSize: state.users.pageSize,\r\n            totalUsersCount: state.users.totalUsersCount,\r\n            isFetching: state.users.isFetching,\r\n            followingIsProgress: state.users.followingIsProgress\r\n        }\r\n    );\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {requestUsers, followUser, unfollowUser}),\r\n    withRouter,\r\n    withAuthRedirect)\r\n(UsersContainer);\r\n","import React from \"react\";\r\n\r\nconst NoPageError = () => {\r\n    return (\r\n        <div>\r\n            <h1>404</h1>\r\n            <p>Page not found</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoPageError;\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport {connect} from \"react-redux\";\nimport {HashRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport {initializeApp} from \"./redux/auth-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport Login from \"./components/Login/Login\";\nimport Users from \"./components/Users/Users\";\nimport NoPageError from \"./components/NoPageError/NoPageError\";\n\nconst App = ({initializeApp, initialized}) => {\n\n    useEffect(() => {\n        initializeApp()\n    });\n\n    return (\n        <HashRouter>\n            <HeaderContainer/>\n            {initialized ?\n                <Switch>\n                    <Route exact path={'/'}>\n                        <Redirect from={'/'} to={'/profile'}/>\n                    </Route>\n                    <Route path={'/profile/:userId?'}\n                           render={() => <ProfileContainer/>}/>\n                    <Route path={'/login'}\n                           render={() => <Login/>}/>\n                    <Route exact path={'/users'}>\n                        <Redirect from={'/users'} to={'/users/page=search=friend='}/>\n                    </Route>\n                    <Route path={'/users/page=:page?search=:search?friend=:friend?'}\n                           render={() => <Users/>}/>\n                    <Route path={'*'}\n                           render={() => <NoPageError/>}/>\n\n                </Switch> :\n                <Preloader/>\n            }\n        </HashRouter>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return (\n        {\n            initialized: state.auth.initialized\n        }\n    );\n}\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport thunk from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\n\r\n\r\nconst reducers = combineReducers({\r\n    form: formReducer,\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    users: usersReducer\r\n});\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__2TVr0\",\"userBlock\":\"User_userBlock__7sadK\",\"userAvatarBlock\":\"User_userAvatarBlock__3Cdd5\",\"followButton\":\"User_followButton__3eh0U\",\"nameBlock\":\"User_nameBlock__3hzkC\",\"userCol\":\"User_userCol__32ezZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Q1YE\",\"logoBox\":\"Header_logoBox__1jmlS\",\"logo\":\"Header_logo__21Qbu\",\"loginIcon\":\"Header_loginIcon__nBhnW\",\"loginActive\":\"Header_loginActive__2sdzF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabPanel\":\"ProfileJob_tabPanel__3pQcQ\",\"centralMeta\":\"ProfileJob_centralMeta__1661F\",\"pageName\":\"ProfileJob_pageName__2_zyN\",\"altPageName\":\"ProfileJob_altPageName__2MkG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__3VPqM\",\"active\":\"Paginator_active__1kgh2\",\"paginatorContainer\":\"Paginator_paginatorContainer__1IAFN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centralMetaContainer\":\"Users_centralMetaContainer__YgZdi\",\"centralMeta\":\"Users_centralMeta__1yEeY\",\"searchBlock\":\"Users_searchBlock__MzY_O\",\"searchCol\":\"Users_searchCol__1gIds\"};","module.exports = __webpack_public_path__ + \"static/media/defaultUser.d9f433b0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabPanel\":\"ProfileAbout_tabPanel__bKOfm\",\"centralMeta\":\"ProfileAbout_centralMeta__18Wd-\",\"pageName\":\"ProfileAbout_pageName__1hEgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabPanel\":\"ProfileContacts_tabPanel__3Yxqq\",\"centralMeta\":\"ProfileContacts_centralMeta__6Gvww\",\"pageName\":\"ProfileContacts_pageName__3DFTD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabPanel\":\"ProfileEditPage_tabPanel__1dqA9\",\"centralMeta\":\"ProfileEditPage_centralMeta__3Q6pk\",\"pageName\":\"ProfileEditPage_pageName__2SFVj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2WW9w\",\"loginPreloader\":\"Preloader_loginPreloader__2Pmqf\"};"],"sourceRoot":""}